// <auto-generated />
using System;
using API_SeeManga.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API_SeeManga.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200704031741_Migration01")]
    partial class Migration01
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API_SeeManga.DTO.DTOCapitulos", b =>
                {
                    b.Property<int>("ID_CAPITULOS")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ID_MANGA")
                        .HasColumnType("int");

                    b.Property<int>("NUMERO")
                        .HasColumnType("int");

                    b.Property<int>("QT_CAPITULOS")
                        .HasColumnType("int");

                    b.HasKey("ID_CAPITULOS");

                    b.HasIndex("ID_MANGA");

                    b.ToTable("CAPITULOS");
                });

            modelBuilder.Entity("API_SeeManga.DTO.DTOComentarios", b =>
                {
                    b.Property<int>("ID_COMENTARIOS")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("COMENTARIO")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("ID_MANGA")
                        .HasColumnType("int");

                    b.Property<int>("ID_USUARIO")
                        .HasColumnType("int");

                    b.HasKey("ID_COMENTARIOS");

                    b.HasIndex("ID_MANGA");

                    b.ToTable("COMENTARIOS");
                });

            modelBuilder.Entity("API_SeeManga.DTO.DTOGeneros", b =>
                {
                    b.Property<int>("ID_GENERO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NM_GENERO")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("ID_GENERO");

                    b.ToTable("GENEROS");
                });

            modelBuilder.Entity("API_SeeManga.DTO.DTOManga_Generos", b =>
                {
                    b.Property<int>("ID_GENERO")
                        .HasColumnType("int");

                    b.Property<int>("ID_MANGA")
                        .HasColumnType("int");

                    b.HasKey("ID_GENERO", "ID_MANGA");

                    b.HasIndex("ID_MANGA");

                    b.ToTable("MANGA_GENEROS");
                });

            modelBuilder.Entity("API_SeeManga.DTO.DTOMangas", b =>
                {
                    b.Property<int>("ID_MANGA")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("CAPA")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("ID_SITUACAO")
                        .HasColumnType("int");

                    b.Property<string>("SINOPSE")
                        .IsRequired()
                        .HasColumnType("nvarchar(2500)")
                        .HasMaxLength(2500);

                    b.Property<string>("TITULO")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("ID_MANGA");

                    b.HasIndex("ID_SITUACAO");

                    b.ToTable("MANGAS");
                });

            modelBuilder.Entity("API_SeeManga.DTO.DTOPaginas", b =>
                {
                    b.Property<int>("ID_PAGINAS")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ID_CAPITULOS")
                        .HasColumnType("int");

                    b.Property<int>("NUMERO")
                        .HasColumnType("int");

                    b.Property<byte[]>("PAGINA")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("ID_PAGINAS");

                    b.HasIndex("ID_CAPITULOS");

                    b.ToTable("PAGINAS");
                });

            modelBuilder.Entity("API_SeeManga.DTO.DTOSituacoes", b =>
                {
                    b.Property<int>("ID_SITUACAO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SITUACAO")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("ID_SITUACAO");

                    b.ToTable("SITUACOES");
                });

            modelBuilder.Entity("API_SeeManga.DTO.DTOCapitulos", b =>
                {
                    b.HasOne("API_SeeManga.DTO.DTOMangas", "Manga")
                        .WithMany("Capitulos")
                        .HasForeignKey("ID_MANGA")
                        .HasConstraintName("FK_CAPITULOS_MANGA")
                        .IsRequired();
                });

            modelBuilder.Entity("API_SeeManga.DTO.DTOComentarios", b =>
                {
                    b.HasOne("API_SeeManga.DTO.DTOMangas", "Manga")
                        .WithMany("Comentarios")
                        .HasForeignKey("ID_MANGA")
                        .HasConstraintName("FK_COMENTARIOS_MANGA")
                        .IsRequired();
                });

            modelBuilder.Entity("API_SeeManga.DTO.DTOManga_Generos", b =>
                {
                    b.HasOne("API_SeeManga.DTO.DTOGeneros", "Genero")
                        .WithMany("Manga_generos")
                        .HasForeignKey("ID_GENERO")
                        .HasConstraintName("FK_MANGA_GENEROS_GENERO")
                        .IsRequired();

                    b.HasOne("API_SeeManga.DTO.DTOMangas", "Manga")
                        .WithMany("Manga_generos")
                        .HasForeignKey("ID_MANGA")
                        .HasConstraintName("FK_MANGA_GENEROS_MANGA")
                        .IsRequired();
                });

            modelBuilder.Entity("API_SeeManga.DTO.DTOMangas", b =>
                {
                    b.HasOne("API_SeeManga.DTO.DTOSituacoes", "Situacao")
                        .WithMany("Mangas")
                        .HasForeignKey("ID_SITUACAO")
                        .HasConstraintName("FK_MANGA_SITUACAO")
                        .IsRequired();
                });

            modelBuilder.Entity("API_SeeManga.DTO.DTOPaginas", b =>
                {
                    b.HasOne("API_SeeManga.DTO.DTOCapitulos", "Capitulo")
                        .WithMany("Paginas")
                        .HasForeignKey("ID_CAPITULOS")
                        .HasConstraintName("FK_PAGINAS_CAPITULO")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
